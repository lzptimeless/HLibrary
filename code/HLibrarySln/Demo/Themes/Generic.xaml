<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!--  公共颜色-开始  -->
    <!--  主题色  -->
    <Color x:Key="color-accent">#ED242C</Color>
    <Color x:Key="color-accent-light">#ED575D</Color>
    <Color x:Key="color-accent-deep">#C82129</Color>
    <SolidColorBrush x:Key="brush-accent" Color="{StaticResource color-accent}" />
    <SolidColorBrush x:Key="brush-accent-light" Color="{StaticResource color-accent-light}" />
    <SolidColorBrush x:Key="brush-accent-deep" Color="{StaticResource color-accent-deep}" />

    <!--  透明色，作为渐变色的节点时会用到  -->
    <Color x:Key="color-transparent">#00000000</Color>
    <SolidColorBrush x:Key="brush-transparent" Color="{StaticResource color-transparent}" />

    <!--  文本色  -->
    <Color x:Key="color-text">#E6E6E6</Color>
    <!--  用于disable状态，次要文字  -->
    <Color x:Key="color-text-weak">#ABABAB</Color>
    <!--  用于标题，强调文字  -->
    <Color x:Key="color-text-highlight">#FFFFFF</Color>
    <!--  文字选择背景色  -->
    <Color x:Key="color-text-selection">#90FFFFFF</Color>
    <!--  文字光标  -->
    <Color x:Key="color-text-caret">#FFFFFF</Color>
    <!--  有深色背景的文本色  -->
    <Color x:Key="color-text-fg">#E6E6E6</Color>
    <!--  有深色背景的，用于disable状态，次要文字  -->
    <Color x:Key="color-text-weak-fg">#ABABAB</Color>
    <!--  有深色背景的，用于标题，强调文字  -->
    <Color x:Key="color-text-highlight-fg">#FFFFFF</Color>
    <!--  有深色背景的，文字选择背景色  -->
    <Color x:Key="color-text-selection-fg">#90FFFFFF</Color>
    <!--  有深色背景的，文字光标  -->
    <Color x:Key="color-text-caret-fg">#FFFFFF</Color>
    <SolidColorBrush x:Key="brush-text" Color="{StaticResource color-text}" />
    <SolidColorBrush x:Key="brush-text-weak" Color="{StaticResource color-text-weak}" />
    <SolidColorBrush x:Key="brush-text-highlight" Color="{StaticResource color-text-highlight}" />
    <SolidColorBrush x:Key="brush-text-selection" Color="{StaticResource color-text-selection}" />
    <SolidColorBrush x:Key="brush-text-caret" Color="{StaticResource color-text-caret}" />
    <SolidColorBrush x:Key="brush-text-fg" Color="{StaticResource color-text-fg}" />
    <SolidColorBrush x:Key="brush-text-weak-fg" Color="{StaticResource color-text-weak-fg}" />
    <SolidColorBrush x:Key="brush-text-highlight-fg" Color="{StaticResource color-text-highlight-fg}" />
    <SolidColorBrush x:Key="brush-text-selection-fg" Color="{StaticResource color-text-selection-fg}" />
    <SolidColorBrush x:Key="brush-text-caret-fg" Color="{StaticResource color-text-caret-fg}" />

    <!--  通用控件色  -->
    <Color x:Key="color-control-fg">#E6E6E6</Color>
    <Color x:Key="color-control-bd">#40FFFFFF</Color>
    <Color x:Key="color-control-bg">#20FFFFFF</Color>
    <Color x:Key="color-control-hover-fg">#E6E6E6</Color>
    <Color x:Key="color-control-hover-bd">#60FFFFFF</Color>
    <Color x:Key="color-control-hover-bg">#40FFFFFF</Color>
    <Color x:Key="color-control-press-fg">#E6E6E6</Color>
    <Color x:Key="color-control-press-bd">#60FFFFFF</Color>
    <Color x:Key="color-control-press-bg">#30FFFFFF</Color>
    <Color x:Key="color-control-select-fg">#E6E6E6</Color>
    <Color x:Key="color-control-select-bd">#40FFFFFF</Color>
    <Color x:Key="color-control-select-bg">#40FFFFFF</Color>
    <Color x:Key="color-control-disable-fg">#ABABAB</Color>
    <Color x:Key="color-control-disable-bd">#00000000</Color>
    <Color x:Key="color-control-disable-bg">#00000000</Color>
    <SolidColorBrush x:Key="brush-control-fg" Color="{StaticResource color-control-fg}" />
    <SolidColorBrush x:Key="brush-control-bd" Color="{StaticResource color-control-bd}" />
    <SolidColorBrush x:Key="brush-control-bg" Color="{StaticResource color-control-bg}" />
    <SolidColorBrush x:Key="brush-control-hover-fg" Color="{StaticResource color-control-hover-fg}" />
    <SolidColorBrush x:Key="brush-control-hover-bd" Color="{StaticResource color-control-hover-bd}" />
    <SolidColorBrush x:Key="brush-control-hover-bg" Color="{StaticResource color-control-hover-bg}" />
    <SolidColorBrush x:Key="brush-control-press-fg" Color="{StaticResource color-control-press-fg}" />
    <SolidColorBrush x:Key="brush-control-press-bd" Color="{StaticResource color-control-press-bd}" />
    <SolidColorBrush x:Key="brush-control-press-bg" Color="{StaticResource color-control-press-bg}" />
    <SolidColorBrush x:Key="brush-control-select-fg" Color="{StaticResource color-control-select-fg}" />
    <SolidColorBrush x:Key="brush-control-select-bd" Color="{StaticResource color-control-select-bd}" />
    <SolidColorBrush x:Key="brush-control-select-bg" Color="{StaticResource color-control-select-bg}" />
    <SolidColorBrush x:Key="brush-control-disable-fg" Color="{StaticResource color-control-disable-fg}" />
    <SolidColorBrush x:Key="brush-control-disable-bd" Color="{StaticResource color-control-disable-bd}" />
    <SolidColorBrush x:Key="brush-control-disable-bg" Color="{StaticResource color-control-disable-bg}" />
    <SolidColorBrush x:Key="brush-control-highlight-fg" Color="{StaticResource color-text-fg}" />
    <SolidColorBrush x:Key="brush-control-highlight-bd" Color="{StaticResource color-accent-deep}" />
    <SolidColorBrush x:Key="brush-control-highlight-bg" Color="{StaticResource color-accent}" />
    <SolidColorBrush x:Key="brush-control-highlight-hover-fg" Color="{StaticResource color-text-fg}" />
    <SolidColorBrush x:Key="brush-control-highlight-hover-bd" Color="{StaticResource color-accent-deep}" />
    <SolidColorBrush x:Key="brush-control-highlight-hover-bg" Color="{StaticResource color-accent-light}" />
    <SolidColorBrush x:Key="brush-control-highlight-press-fg" Color="{StaticResource color-text-fg}" />
    <SolidColorBrush x:Key="brush-control-highlight-press-bd" Color="{StaticResource color-accent-deep}" />
    <SolidColorBrush x:Key="brush-control-highlight-press-bg" Color="{StaticResource color-accent}" />
    <SolidColorBrush x:Key="brush-control-highlight-disable-fg" Color="{StaticResource color-control-disable-fg}" />
    <SolidColorBrush x:Key="brush-control-highlight-disable-bd" Color="{StaticResource color-control-disable-bd}" />
    <SolidColorBrush x:Key="brush-control-highlight-disable-bg" Color="{StaticResource color-control-disable-bg}" />

    <!--  通用容器色  -->
    <Color x:Key="color-panel-bd">#3A3A3A</Color>
    <Color x:Key="color-panel-bg">#1E1E1E</Color>
    <Color x:Key="color-panel-hover-bd">#60FFFFFF</Color>
    <Color x:Key="color-panel-hover-bg">#40FFFFFF</Color>
    <Color x:Key="color-panel-select-bd">#40FFFFFF</Color>
    <Color x:Key="color-panel-select-bg">#40FFFFFF</Color>
    <Color x:Key="color-panel-disable-bd">#00000000</Color>
    <Color x:Key="color-panel-disable-bg">#00000000</Color>
    <SolidColorBrush x:Key="brush-panel-bd" Color="{StaticResource color-panel-bd}" />
    <SolidColorBrush x:Key="brush-panel-bg" Color="{StaticResource color-panel-bg}" />
    <SolidColorBrush x:Key="brush-panel-hover-bd" Color="{StaticResource color-panel-hover-bd}" />
    <SolidColorBrush x:Key="brush-panel-hover-bg" Color="{StaticResource color-panel-hover-bg}" />
    <SolidColorBrush x:Key="brush-panel-select-bd" Color="{StaticResource color-panel-select-bd}" />
    <SolidColorBrush x:Key="brush-panel-select-bg" Color="{StaticResource color-panel-select-bg}" />
    <SolidColorBrush x:Key="brush-panel-disable-bd" Color="{StaticResource color-panel-disable-bd}" />
    <SolidColorBrush x:Key="brush-panel-disable-bg" Color="{StaticResource color-panel-disable-bg}" />
    <SolidColorBrush x:Key="brush-panel-highlight-bd" Color="{StaticResource color-accent-deep}" />
    <SolidColorBrush x:Key="brush-panel-highlight-bg" Color="{StaticResource color-accent}" />

    <!--  窗口色  -->
    <Color x:Key="color-window-bd">#3A3A3A</Color>
    <Color x:Key="color-window-bg">#1E1E1E</Color>
    <SolidColorBrush x:Key="brush-window-bd" Color="{StaticResource color-window-bd}" />
    <SolidColorBrush x:Key="brush-window-bg" Color="{StaticResource color-window-bg}" />
    <!--  公共颜色-结束  -->

    <!--  Text  -->
    <FontFamily x:Key="font">Microsoft YaHei UI</FontFamily>
    <sys:Double x:Key="font-size">13</sys:Double>
    <Style x:Key="textblock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="Foreground" Value="{StaticResource brush-text}" />
    </Style>
    <Style x:Key="textblock-h1" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="Foreground" Value="{StaticResource brush-text-highlight}" />
    </Style>
    <Style x:Key="textblock-h2" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="Foreground" Value="{StaticResource brush-text-highlight}" />
    </Style>
    <Style x:Key="textblock-h3" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="Foreground" Value="{StaticResource brush-text-highlight}" />
    </Style>
    <Style x:Key="textblock-weak" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="Foreground" Value="{StaticResource brush-text-weak}" />
    </Style>

    <!--  Button colors  -->
    <Style x:Key="button" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border x:Name="HoverBg" Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                x:Name="Text"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource brush-control-hover-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-hover-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-hover-bg}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource brush-control-press-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-press-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-press-bg}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource brush-control-disable-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-disable-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-disable-bg}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource brush-control-bg}" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-bd}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8,0" />
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="Height" Value="30" />
    </Style>
    <Style x:Key="button-highlight" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border x:Name="HoverBg" Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                x:Name="Text"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource brush-control-highlight-hover-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-highlight-hover-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-highlight-hover-bg}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource brush-control-highlight-press-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-highlight-press-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-highlight-press-bg}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource brush-control-highlight-disable-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-highlight-disable-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-highlight-disable-bg}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource brush-control-highlight-bg}" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-highlight-fg}" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-highlight-bd}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8,0" />
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="Height" Value="30" />
    </Style>
    <Style x:Key="button-path-fill" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border x:Name="HoverBg" Padding="{TemplateBinding Padding}">
                            <Path
                                x:Name="Path"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Data="{TemplateBinding Content}"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Uniform" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource brush-control-hover-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-hover-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-hover-bg}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource brush-control-press-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-press-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-press-bg}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource brush-control-disable-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-disable-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-transparent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-bd}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="12" />
        <Setter Property="MinHeight" Value="12" />
    </Style>
    <Style x:Key="button-path-stroke" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border x:Name="HoverBg" Padding="{TemplateBinding Padding}">
                            <Path
                                x:Name="Path"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Data="{TemplateBinding Content}"
                                Stretch="Uniform"
                                Stroke="{TemplateBinding Foreground}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Stroke" Value="{StaticResource brush-control-hover-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-hover-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-hover-bg}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Path" Property="Stroke" Value="{StaticResource brush-control-press-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-press-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-control-press-bg}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Stroke" Value="{StaticResource brush-control-disable-fg}" />
                            <Setter TargetName="HoverBg" Property="BorderBrush" Value="{StaticResource brush-control-disable-bd}" />
                            <Setter TargetName="HoverBg" Property="Background" Value="{StaticResource brush-transparent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-bd}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="12" />
        <Setter Property="MinHeight" Value="12" />
    </Style>

    <!--  Checkbox  -->
    <Style x:Key="checkbox" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="Border"
                                Width="16"
                                Height="16"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding Foreground}"
                                BorderThickness="1"
                                CornerRadius="0">
                                <Grid>
                                    <Path
                                        x:Name="CheckMark"
                                        Width="10"
                                        Height="10"
                                        Data="M27.903015,0L32,4.0970465 12.369019,23.728029 11.685974,24.520998 0,14.441042 3.7819824,10.054994 11.330017,16.567019z"
                                        Fill="{StaticResource brush-accent-light}"
                                        SnapsToDevicePixels="False"
                                        Stretch="Uniform"
                                        Visibility="Collapsed" />
                                    <Path
                                        x:Name="InderminateMark"
                                        Width="8"
                                        Height="8"
                                        Data="M 0,0 8,0 8,8 0,8 Z"
                                        Fill="{StaticResource brush-accent-light}"
                                        SnapsToDevicePixels="False"
                                        Stretch="Uniform"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-hover-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InderminateMark" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-hover-fg}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-hover-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-hover-bg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-press-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InderminateMark" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-press-fg}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-press-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-press-bg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-disable-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InderminateMark" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-disable-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-disable-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-disable-bg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InderminateMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-bd}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
    </Style>

    <!--  RadioButton  -->
    <Style x:Key="radiobutton" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Ellipse
                                    x:Name="Border"
                                    Fill="{TemplateBinding Background}"
                                    Stroke="{TemplateBinding Foreground}"
                                    StrokeThickness="1" />
                                <Ellipse
                                    x:Name="CheckMark"
                                    Margin="4"
                                    Fill="{StaticResource brush-accent-light}"
                                    Visibility="Collapsed" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-hover-fg}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Path.Stroke)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-hover-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-hover-bg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-press-fg}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Path.Stroke)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-press-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-press-bg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-disable-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Path.Stroke)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-disable-fg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource brush-control-disable-bg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-bd}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
    </Style>

    <!--  Thumb  -->
    <Style x:Key="thumb" TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border
                        x:Name="HitTag"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HitTag" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource brush-control-hover-bd}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HitTag" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource brush-control-hover-bg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HitTag" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource brush-control-press-bd}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HitTag" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource brush-control-press-bg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HitTag" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource brush-control-disable-bd}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HitTag" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource brush-control-disable-bg}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-bd}" />
        <Setter Property="Background" Value="{StaticResource brush-control-bg}" />
    </Style>

    <!--  ToolTip  -->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="4"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Background" Value="{StaticResource brush-panel-bg}" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-panel-bd}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>

    <!--  ProgressBar  -->
    <Style x:Key="progressbar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Border x:Name="PART_Track" />
                            <Border
                                x:Name="PART_Indicator"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Foreground}"
                                ClipToBounds="True">
                                <Rectangle
                                    x:Name="PART_GlowRect"
                                    Width="100"
                                    Margin="-100,0,0,0"
                                    HorizontalAlignment="Left"
                                    Fill="{StaticResource brush-accent-deep}" />
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource brush-control-bg}" />
        <Setter Property="Foreground" Value="{StaticResource brush-accent}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-bd}" />
        <Setter Property="Height" Value="10" />
    </Style>

    <!--  ScrollBar  -->
    <sys:Double x:Key="scrollbar-size">12</sys:Double>
    <Style x:Key="button-scrollbar-line" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <Path
                            x:Name="Path"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="None"
                            Stroke="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Stroke" Value="{StaticResource brush-control-hover-fg}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource brush-control-hover-bg}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Path" Property="Stroke" Value="{StaticResource brush-control-press-fg}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource brush-control-press-bg}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Stroke" Value="{StaticResource brush-transparent}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource brush-transparent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
    </Style>
    <Style x:Key="button-scrollbar-page" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{StaticResource brush-transparent}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <ControlTemplate x:Key="scrollbar-vertical" TargetType="ScrollBar">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="18" />
                    <RowDefinition />
                    <RowDefinition Height="18" />
                </Grid.RowDefinitions>
                <RepeatButton
                    Grid.Row="0"
                    Command="ScrollBar.LineUpCommand"
                    Content="M0,3 L3.5,0 L7,3"
                    Style="{StaticResource button-scrollbar-line}" />
                <Track
                    x:Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource button-scrollbar-page}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Focusable="True"
                            IsTabStop="False"
                            RenderTransformOrigin="0.5,0.5"
                            Style="{StaticResource thumb}">
                            <Thumb.RenderTransform>
                                <ScaleTransform ScaleX="0.3" />
                            </Thumb.RenderTransform>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource button-scrollbar-page}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Row="2"
                    Command="ScrollBar.LineDownCommand"
                    Content="M0,0 L3.5,3 L7,0"
                    Style="{StaticResource button-scrollbar-line}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.15" />
                    </VisualStateGroup.Transitions>
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Thumb"
                                Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleX)"
                                To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Disabled" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="scrollbar-horizontal" TargetType="ScrollBar">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="18" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="18" />
                </Grid.ColumnDefinitions>
                <RepeatButton
                    Grid.Column="0"
                    Command="ScrollBar.LineLeftCommand"
                    Content="M3,0 L0,3.5 L3,7"
                    Style="{StaticResource button-scrollbar-line}" />
                <Track
                    x:Name="PART_Track"
                    Grid.Column="1"
                    IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource button-scrollbar-page}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Focusable="True"
                            IsTabStop="False"
                            RenderTransformOrigin="0.5,0.5"
                            Style="{StaticResource thumb}">
                            <Thumb.RenderTransform>
                                <ScaleTransform ScaleY="0.3" />
                            </Thumb.RenderTransform>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource button-scrollbar-page}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Column="2"
                    Command="ScrollBar.LineRightCommand"
                    Content="M0,0 L3,3.5 L0,7"
                    Style="{StaticResource button-scrollbar-line}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.15" />
                    </VisualStateGroup.Transitions>
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Thumb"
                                Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleY)"
                                To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Disabled" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <Style x:Key="scrollbar" TargetType="ScrollBar">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-transparent}" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="{StaticResource scrollbar-size}" />
                <Setter Property="Template" Value="{StaticResource scrollbar-horizontal}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="{StaticResource scrollbar-size}" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource scrollbar-vertical}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource brush-control-bg}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource brush-transparent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ScrollViewer  -->
    <Style x:Key="scrollviewer" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollContentPresenter
                                x:Name="PART_ScrollContentPresenter"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                Grid.Row="0"
                                Grid.Column="1"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                Style="{StaticResource scrollbar}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                Grid.Row="1"
                                Grid.Column="0"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                Style="{StaticResource scrollbar}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-panel-bd}" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>
    <!--  No scrollbar version  -->
    <Style x:Key="scrollviewer-slim" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            CanContentScroll="{TemplateBinding CanContentScroll}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-panel-bd}" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>

    <!--  TextBox  -->
    <Style x:Key="textbox" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        Foreground="{TemplateBinding Foreground}"
                        Style="{StaticResource scrollviewer}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{StaticResource brush-control-hover-bd}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{StaticResource brush-control-hover-bd}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="{StaticResource brush-transparent}" />
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{StaticResource brush-transparent}" />
                            <Setter Property="Foreground" Value="{StaticResource brush-text}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="Foreground" Value="{StaticResource brush-text-highlight}" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-bd}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SelectionBrush" Value="{StaticResource brush-text-selection}" />
        <Setter Property="CaretBrush" Value="{StaticResource brush-text-caret}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="Height" Value="25" />
    </Style>

    <!--  ListBox  -->
    <Style x:Key="listboxitem" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource brush-panel-select-bd}" />
                            <Setter Property="Background" Value="{StaticResource brush-panel-select-bg}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource brush-panel-hover-bd}" />
                            <Setter Property="Background" Value="{StaticResource brush-panel-hover-bg}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-transparent}" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="listbox" TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Style="{StaticResource scrollviewer}">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-panel-bd}" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource listboxitem}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <!--  ComboBox  -->
    <Style x:Key="combobox-togglebutton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Path
                            x:Name="Arrow"
                            Margin="0,0,6,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="M0,0 L3.5,3 L7,0"
                            Stroke="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>M0,3 L3.5,0 L7,3</PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style x:Key="combobox-textbox" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Foreground="{TemplateBinding Foreground}"
                        Style="{StaticResource scrollviewer-slim}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SelectionBrush" Value="{StaticResource brush-text-selection}" />
        <Setter Property="CaretBrush" Value="{StaticResource brush-text-caret}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Focusable" Value="True" />
    </Style>
    <Style x:Key="comboboxitem" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource brush-panel-hover-bd}" />
                            <Setter Property="Background" Value="{StaticResource brush-panel-hover-bg}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource brush-panel-select-bd}" />
                            <Setter Property="Background" Value="{StaticResource brush-panel-select-bg}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource brush-panel-bd}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="5,0,5,0" />
        <Setter Property="Height" Value="25" />
    </Style>
    <Style x:Key="combobox" TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ToggleButton
                                    Background="{StaticResource brush-transparent}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource combobox-togglebutton}" />
                                <ContentPresenter
                                    x:Name="ContentSite"
                                    Margin="5,0,20,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="False" />
                                <TextBox
                                    x:Name="PART_EditableTextBox"
                                    Margin="0,0,20,0"
                                    Background="{StaticResource brush-transparent}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    Style="{StaticResource combobox-textbox}"
                                    Visibility="Hidden" />
                            </Grid>
                        </Border>
                        <Popup
                            MinWidth="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Fade"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                HorizontalContentAlignment="Stretch"
                                Background="{StaticResource brush-panel-bg}"
                                BorderBrush="{StaticResource brush-panel-bd}"
                                BorderThickness="1"
                                Style="{StaticResource scrollviewer}">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource brush-control-hover-fg}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource brush-control-hover-bd}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource brush-control-hover-bg}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource brush-control-hover-fg}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource brush-control-hover-bd}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource brush-transparent}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource brush-transparent}" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource comboboxitem}" />
        <Setter Property="Foreground" Value="{StaticResource brush-control-fg}" />
        <Setter Property="Background" Value="{StaticResource brush-transparent}" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-control-bd}" />
        <Setter Property="FontFamily" Value="{StaticResource font}" />
        <Setter Property="FontSize" Value="{StaticResource font-size}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="25" />
    </Style>

    <!--  Window  -->
    <Style x:Key="window-shell" TargetType="Window">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click" SourceName="BtnMinimize">
                                <ei:ChangePropertyAction
                                    PropertyName="WindowState"
                                    TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                                    Value="Minimized" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Click" SourceName="BtnMaximize">
                                <ei:ChangePropertyAction
                                    PropertyName="WindowState"
                                    TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                                    Value="Maximized" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Click" SourceName="BtnRestore">
                                <ei:ChangePropertyAction
                                    PropertyName="WindowState"
                                    TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                                    Value="Normal" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Click" SourceName="BtnClose">
                                <ei:CallMethodAction MethodName="Close" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <AdornerDecorator>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid Background="{StaticResource brush-accent}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Content="{TemplateBinding Tag}" />
                                    <StackPanel
                                        Grid.Column="1"
                                        Orientation="Horizontal"
                                        WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Button
                                            x:Name="BtnMinimize"
                                            Width="30"
                                            Padding="8"
                                            Style="{StaticResource button-path-fill}">
                                            <Button.Content>
                                                <PathGeometry>M7.9750088,17.000004L24.024009,17.000004C24.577003,17.000004 25.024009,17.447025 25.024009,18.000004 25.024009,18.552982 24.577003,19.000004 24.024009,19.000004L7.9750088,19.000004C7.4219998,19.000004 6.9750087,18.552982 6.9750089,18.000004 6.9750087,17.447025 7.4219998,17.000004 7.9750088,17.000004z M2,2L2,26 30,26 30,2z M0,0L32,0 32,28 0,28z</PathGeometry>
                                            </Button.Content>
                                        </Button>
                                        <Button
                                            x:Name="BtnMaximize"
                                            Width="30"
                                            Padding="8"
                                            Style="{StaticResource button-path-fill}">
                                            <Button.Content>
                                                <PathGeometry>M1.9999998,8.009992L1.9999998,29.99999 24,29.99999 24,8.009992z M6.9999855,2L6.9999855,6.0099912 26,6.0099912 26,25.004003 29.999985,25.004003 29.999985,2z M4.9999855,0L31.999985,0 31.999985,27.004003 26,27.004003 26,31.99999 0,31.99999 0,6.0099912 4.9999855,6.0099912z</PathGeometry>
                                            </Button.Content>
                                        </Button>
                                        <Button
                                            x:Name="BtnRestore"
                                            Width="30"
                                            Padding="8"
                                            Style="{StaticResource button-path-fill}"
                                            Visibility="Collapsed">
                                            <Button.Content>
                                                <PathGeometry>M2.401001,9.1999828L2.401001,29.599002 24.003998,29.599002 24.003998,9.1999828z M0,5.5999762L26.395996,5.5999762 26.395996,31.994998 0,31.994998z M10.852997,0L32,0 32,21.596988 29.598022,21.596988 29.598022,2.3999938 10.85202,2.3999938z</PathGeometry>
                                            </Button.Content>
                                        </Button>
                                        <Button
                                            x:Name="BtnClose"
                                            Width="30"
                                            Padding="9"
                                            Style="{StaticResource button-path-fill}">
                                            <Button.Content>
                                                <PathGeometry>M1.442037,0L16.002031,14.585751 30.588022,0.025996563 32.001024,1.4409965 17.414783,16.001002 31.97503,30.587006 30.560022,32 15.999268,17.413969 1.4130009,31.973999 0,30.558998 14.586494,15.998742 0.027028472,1.4140019z</PathGeometry>
                                            </Button.Content>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                                <ContentPresenter Grid.Row="1" />
                            </Grid>
                        </AdornerDecorator>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="BtnMaximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BtnRestore" Property="Visibility" Value="Visible" />
                            <Setter Property="BorderThickness" Value="7" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="BtnMinimize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BtnMaximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BtnRestore" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="BtnMaximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BtnRestore" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="30" UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource brush-window-bd}" />
        <Setter Property="Background" Value="{StaticResource brush-window-bg}" />
    </Style>
</ResourceDictionary>